<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.5/mule.xsd
      http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.5/mule-http.xsd
      http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/3.3/mule-amqp.xsd">

    <flow name="ContactsHampayEnabledFlow">
        <amqp:inbound-endpoint queueName="${queue.contactHampayEnabledRequest}" exchange-pattern="one-way"
                               connector-ref="amqpRabbitMQConnector"/>
        <gzip-uncompress-transformer returnClass="java.lang.String"/>
        <transformer ref="JsonToRequestMessage_ContactsHampayEnabledRequest"/>
        <set-variable variableName="requestPayload" value="#[payload]"/>
        <flow-ref name="RetrieveUserInfo"/>

        <choice>
            <when expression="#[flowVars.authorized]">
                <flow-ref name="GetUserByUserId"/>
                <flow-ref name="setHampayEnabledContacts"/>

                <invoke object-ref="contactResponseProvider" method="createHampayEnabledResponse"
                        methodArguments="#[flowVars.refinedContacts],#[payload.service]"/>
            </when>
            <otherwise>
                <invoke object-ref="contactResponseProvider" method="createAuthenticationFailureResponse"
                        methodArguments="#[payload.service.requestUUID]"/>
            </otherwise>
        </choice>
        <transformer ref="ResponseMessageToJson"/>
        <gzip-compress-transformer/>
        <set-property propertyName="Content-Encoding" value="gzip"/>
        <amqp:outbound-endpoint connector-ref="amqpRabbitMQConnector"
                                exchangeName="${exchange.hpEnabledContactsResponse}"
                                exchangeType="topic" exchangeDurable="true" routingKey="${core.routing.key}"/>
        <exception-strategy ref="HampayEnabledContactException"/>
    </flow>

    <sub-flow name="setHampayEnabledContacts">
        <enricher target="#[variable:refinedContacts]">
            <invoke object-ref="contactService" method="refineHampayEnabled"
                    methodArguments="#[payload.service.contacts],#[flowVars.user]"/>
        </enricher>
        <invoke object-ref="contactService" method="updateUserContacts"
                methodArguments="#[flowVars.refinedContacts],#[flowVars.user]"/>

    </sub-flow>

</mule>